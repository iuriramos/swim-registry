# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-05-18 18:20
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('AERONAUTICAL INFORMATION MANAGEMENT', 'Aeronautical Information Management'), ('AIRPORT CDM', 'Airport CDM'), ('COLLISION AVOIDANCE', 'Collision Avoidance'), ('SURVEILLANCE INFRASTRUCTURE', 'Surveillance Infrastructure'), ('TRAFFIC SEQUENCING', 'Traffic Sequencing'), ('TRAFFIC SYNCHRONISATION', 'Traffic Synchronisation'), ('TRAJECTORY EXECUTION AND CONFORMANCE MONITORING', 'Trajectory Execution And Conformance Monitoring'), ('CNS INFRASTRUCTURE', 'CNS Infrastructure'), ('FLIGHT INFORMATION MANAGEMENT', 'Flight Information Management'), ('NAVIGTION INFRASTRUCTURE', 'Navigtion Infrastructure'), ('ROUTE DESIGN', 'Route Design'), ('SEPARATION PROVISION', 'Separation Provision'), ('TRAJECTORY PLANNING', 'Trajectory Planning'), ('AIRSPACE AND SURFACE STRUCTURE DESIGN', 'Airspace And Surface Structure Design'), ('ATM INFORMATION MANAGEMENT', 'ATM Information Management'), ('COMMUNICATION INFRASTRUCTURE', 'Communication Infrastructure'), ('METEOROLOGICAL INFORMATION', 'Meteorological Information'), ('ROUTE ASSIGNMENT AND GUIDANCE', 'Route Assignment And Guidance'), ('AIRSPACE AND SURFACE STRUCTURE ALLOCATION', 'Airspace And Surface Structure Allocation'), ('MET INFORMATION MANAGEMENT', 'MET Information Management'), ('AIRSPACE ACCESS', 'Airspace Access'), ('SHARED INFORMATION SERVICE MANAGEMENT', 'Shared Information Service Management'), ('DEMAND AND CAPACITY BALANCING', 'Demand And Capacity Balancing'), ('CONFLICT MANAGEMENT', 'Conflict Management'), ('AIRPORT MANAGEMENT', 'Airport Management'), ('TRAJECTORY MANAGEMENT', 'Trajectory Management'), ('ATM NETWORK MANAGEMENT', 'ATM Network Management')], max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'ATM activity categories',
                'verbose_name': 'ATM activity category',
            },
        ),
        migrations.CreateModel(
            name='DataCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('AERONAUTICAL INFORMATION', 'Aeronautical Information'), ('METEOROLOGY', 'Meteorology'), ('ENVIRONMENT', 'Environment'), ('CAPACITY DEMAND AND FLOW', 'Capacity Demand and Flow'), ('SURVEILLANCE', 'Surveillance'), ('OTHER', 'Other')], max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'ATM data categories',
                'verbose_name': 'ATM data category',
            },
        ),
        migrations.CreateModel(
            name='FlightPhaseCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('AIRPORT RAMP', 'Airport (ramp)'), ('TAKE OFF', 'Take Off'), ('DEPARTURE', 'Departure'), ('EN-ROUTE', 'En-route'), ('OCEANIC', 'Oceanic'), ('ARRIVAL', 'Arrival')], max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'flight phases categories',
                'verbose_name': 'flight phase category',
            },
        ),
        migrations.CreateModel(
            name='ImplementationMaturityCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('OPERATIONAL', 'Operational'), ('PROTOTYPE', 'Prototype')], max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'implementation maturity categories',
                'verbose_name': 'implementation maturity category',
            },
        ),
        migrations.CreateModel(
            name='ImplementationStatusCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('CURRENT AND SUPPORTED', 'Read for consumption'), ('TERMINATED', 'Terminated'), ('UNDER DEVELOPMENT', 'Under development')], max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'implementation status categories',
                'verbose_name': 'implementation status category',
            },
        ),
        migrations.CreateModel(
            name='RegionCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('AFRICA', 'Africa'), ('ASIA', 'Asia'), ('EUROPE', 'Europe'), ('GLOBAL', 'Global'), ('NORTH AMERICA', 'North America'), ('OCEANIA', 'Oceania'), ('SOUTH AMERICA', 'South America')], max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'region categories',
                'verbose_name': 'region category',
            },
        ),
        migrations.CreateModel(
            name='RegistrationStatusCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('DRAFT', 'Draft'), ('VALIDATION', 'Validation'), ('REGISTERED', 'Registered')], max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'registration status categories',
                'verbose_name': 'registration status category',
            },
        ),
        migrations.CreateModel(
            name='StakeholderCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('AIRPORT OPERATOR', 'Airport Operator'), ('AIRSPACE USER', 'Airspace User'), ('ANSP', 'ANSP'), ('NETWORK MANAGER', 'Network Manager')], max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'stakeholder categories',
                'verbose_name': 'stakeholder category',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('AIRM MODEL', 'AIRM Model'), ('COMPLIANCE REFERENCE DOCUMENT', 'Compliance Reference Document'), ('CONTACT POINT', 'Contact Point'), ('ORGANISATION DOCUMENT', 'Organisation Document'), ('GENERAL DOCUMENT', 'General Document'), ('INFORMATION REFERENCE DOCUMENT', 'Information Reference Document'), ('INFRASTRUCTURE PROFILE', 'Infrastructure Profile'), ('REFERENCE DOCUMENT', 'Reference Document'), ('INFRASTRUCTURE STANDARD', 'Infrastructure Standard'), ('INTERFACE', 'Interface'), ('ORGANISATION', 'Organisation'), ('PROPRIETARY DATA EXCHANGE FORMAT', 'Proprietary Data Exchange Format'), ('SERVICE IMPLEMENTATION', 'Service Implementation'), ('SERVICE COMPLIANCE CLAIM', 'Service Compliance Claim'), ('SERVICE DEFINITION', 'Service Definition'), ('SERVICE DEFINITION PROGRESS', 'Service Definition Progress'), ('SERVICE DOCUMENT', 'Service Document'), ('SERVICE END POINT', 'Service End Point'), ('SERVICE LOGICAL MODEL', 'Service Logical Model'), ('SERVICE REFERENCE DOCUMENT', 'Service Reference Document'), ('DATA STANDARD', 'Data Standard')], max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='VersionCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('CURRENT AND SUPPORTED', 'Current and Supported'), ('NON SUPPORTED', 'Non Supported'), ('OBSOLETE BUT SUPPORTED', 'Obsolete but Supported'), ('UPCOMING NOT SUPPORTED', 'Upcoming not Supported')], max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'version categories',
                'verbose_name': 'version category',
            },
        ),
    ]
